name: CI/CD with Semantic Version Tagging

on:
  push:
    branches:
      - main  # Adjust this if you want tagging on another branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Build the Docker image
        run: |
          docker build . --file Dockerfile --tag my-image-name:$(date +%s)

      - name: Get current version
        id: get_version
        run: |
          # Fetch the latest tags from the repo
          git fetch --tags
          # Check if there are any tags
          if [ -z "$(git tag)" ]; then
            # No tags found, default to 0.0.0
            echo "current_version=0.0.0" >> $GITHUB_ENV
          else
            # Get the latest semantic version tag
            VERSION=$(git describe --tags --abbrev=0)
            echo "current_version=$VERSION" >> $GITHUB_ENV
          fi

      - name: Calculate new version
        id: calculate_version
        run: |
          # Define how to increment the version; here, we increment the patch version
          IFS='.' read -r major minor patch <<< "$current_version"
          patch=$((patch + 1))
          new_version="$major.$minor.$patch"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Tag the new version
        if: steps.calculate_version.outputs.new_version != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Configure Git for tagging and pushing
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          # Create the new tag
          git tag -a "v$new_version" -m "Release $new_version"
          # Push the new tag to the repository
          git push origin "v$new_version"

      - name: Confirm tag creation
        run: |
          # Check if the new tag exists
          if git rev-parse "v$new_version" >/dev/null 2>&1; then
            echo "Successfully created tag v$new_version"
          else
            echo "Failed to create tag v$new_version"
          fi
